// Begin DF4K

// Graphics

// Purchase Menu
spriteset (spriteset_df4k_purchase_green) {
    template_purchase_empty ()
}
spriteset (spriteset_df4k_purchase_orange) {
    template_purchase_empty ()
}
alternative_sprites(spriteset_df4k_purchase_green, ZOOM_LEVEL_IN_4X, BIT_DEPTH_32BPP) {
    template_purchase ("diesel", "df4")
}
alternative_sprites(spriteset_df4k_purchase_orange, ZOOM_LEVEL_IN_4X, BIT_DEPTH_32BPP) {
    template_purchase ("diesel", "df4-orange")
}


// Vehicle
spriteset (spriteset_df4k_green) {
    template_empty ()
}
spriteset (spriteset_df4k_orange) {
    template_empty ()
}
alternative_sprites(spriteset_df4k_green, ZOOM_LEVEL_IN_4X, BIT_DEPTH_32BPP) {
    template_10_standard ("diesel", "df4")
}
alternative_sprites(spriteset_df4k_orange, ZOOM_LEVEL_IN_4X, BIT_DEPTH_32BPP) {
    template_10_standard ("diesel", "df4-orange")
}


switch (FEAT_TRAINS, SELF, switch_df4k_articulated_part, extra_callback_info1) {
    1..2: return df4k;
    return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

switch (FEAT_TRAINS, SELF, switch_df4k_subtype, cargo_subtype) {
    1: spriteset_df4k_green;
    spriteset_df4k_orange;
}

switch (FEAT_TRAINS, SELF, switch_df4k_subtype_text, cargo_subtype) {
    1: return string(STR_GREEN);
    return string(STR_ORANGE);
}

switch (FEAT_TRAINS, SELF, switch_df4k_graphics, position_in_articulated_veh % 3) {
    1: switch_df4k_subtype;
    empty_sprites;   
}

switch (FEAT_TRAINS, SELF, switch_df4k_capacity, position_in_articulated_veh % 3) {
    return 0;
}

switch (FEAT_TRAINS, SELF, switch_df4k_additional_text, param_cargo_decay) {
    return string(STR_DESC_3, string(STR_DF4_LIVERY_AVAILABILITY), string(STR_DF4_NICKNAME), string(STR_RELIABILITY_32));
}